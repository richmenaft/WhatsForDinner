// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WhatsForDinner.DataAccess.Postgres;

#nullable disable

namespace WhatsForDinner.DataAccess.Postgres.Migrations
{
    [DbContext(typeof(WfdDbContext))]
    [Migration("20241210135943_MakeImageNullableInDish")]
    partial class MakeImageNullableInDish
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WhatsForDinner.DataAccess.Postgres.Models.DishEntity", b =>
                {
                    b.Property<Guid>("DishId")
                        .HasColumnType("uuid")
                        .HasColumnName("dish_id");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("description");

                    b.Property<Guid?>("ImageId")
                        .HasColumnType("uuid")
                        .HasColumnName("image_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("title");

                    b.HasKey("DishId");

                    b.ToTable("Dishes");
                });

            modelBuilder.Entity("WhatsForDinner.DataAccess.Postgres.Models.ImageEntity", b =>
                {
                    b.Property<Guid>("ImageId")
                        .HasColumnType("uuid")
                        .HasColumnName("image_id");

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("bytea")
                        .HasColumnName("content");

                    b.Property<Guid>("DishId")
                        .HasColumnType("uuid")
                        .HasColumnName("dish_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("title");

                    b.HasKey("ImageId");

                    b.HasIndex("DishId")
                        .IsUnique();

                    b.ToTable("Images");
                });

            modelBuilder.Entity("WhatsForDinner.DataAccess.Postgres.Models.TagEntity", b =>
                {
                    b.Property<Guid>("TagId")
                        .HasColumnType("uuid")
                        .HasColumnName("tag_id");

                    b.Property<Guid>("DishId")
                        .HasColumnType("uuid")
                        .HasColumnName("dish_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("title");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("type");

                    b.HasKey("TagId");

                    b.HasIndex("DishId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("WhatsForDinner.DataAccess.Postgres.Models.ImageEntity", b =>
                {
                    b.HasOne("WhatsForDinner.DataAccess.Postgres.Models.DishEntity", "Dish")
                        .WithOne("Img")
                        .HasForeignKey("WhatsForDinner.DataAccess.Postgres.Models.ImageEntity", "DishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dish");
                });

            modelBuilder.Entity("WhatsForDinner.DataAccess.Postgres.Models.TagEntity", b =>
                {
                    b.HasOne("WhatsForDinner.DataAccess.Postgres.Models.DishEntity", "Dish")
                        .WithMany("Tags")
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dish");
                });

            modelBuilder.Entity("WhatsForDinner.DataAccess.Postgres.Models.DishEntity", b =>
                {
                    b.Navigation("Img");

                    b.Navigation("Tags");
                });
#pragma warning restore 612, 618
        }
    }
}
